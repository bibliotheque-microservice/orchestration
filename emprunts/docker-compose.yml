services:
  api:
    build: .
    env_file:
      - .env
    ports:
      - "${PORT}:${PORT}"
    volumes:
      - .:/usr/src/app
    command: air ./cmd/ -b 0.0.0.0
    depends_on:
      db-emprunts:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      com.datadoghq.ad.logs: '[{"source": "python", "service": "emprunts-api"}]'
    networks:
      - app_network

  adminer:
    image: adminer
    container_name: adminer
    depends_on:
      - db-emprunts
    ports:
      - "5555:5555"
    networks:
      - app_network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5672:5672
      - 15672:15672
      - 15692:15692
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
      - rabbitmq-log:/var/log/rabbitmq
      - ./enabled_plugins:/etc/rabbitmq/enabled_plugins
    networks:
      - app_network

  db-emprunts:
    image: postgres:alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGPORT: ${DB_PORT}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - ./migrations/dump.sql:/docker-entrypoint-initdb.d/dump.sql
      - postgres-db:/var/lib/postgresql/data
    networks:
      - app_network

  datadog-agent:
    image: gcr.io/datadoghq/agent:latest
    container_name: datadog-agent
    environment:
      - DD_API_KEY=02ddf68eb10303948fe9d3b6d294136e
      - DD_SITE=us5.datadoghq.com
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    depends_on:
      - api
    networks:
      - app_network

volumes:
  postgres-db:
  rabbitmq-data:
  rabbitmq-log:

networks:
  app_network:
    external: true